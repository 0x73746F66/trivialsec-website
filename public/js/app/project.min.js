const initProject=async event=>{livetime(),setInterval(livetime,1e3),app.websocket.on("update_job_state",handleSocket),app.websocket.on("dns_changes",handleSocket),app.websocket.on("domain_changes",handleSocket),app.websocket.on("check_domains_tld",handleSocket),renderFindingsChart.call({},event),renderJobsChart.call({},event);const projectActionEl=document.querySelector(".archive-project");projectActionEl.addEventListener("click",projectArchiveButton,!1),projectActionEl.addEventListener("touchstart",projectArchiveButton,!!supportsPassive&&{passive:!0});for await(const domainEl of document.querySelectorAll(".domains-list td.click-through")){domainEl.parent(".disabled-events")||(domainEl.addEventListener("click",domainsAction,!1),domainEl.addEventListener("touchstart",domainsAction,!!supportsPassive&&{passive:!0}))}for await(const domainEl of document.querySelectorAll(".domains-list td.toggle-monitoring"))domainEl.addEventListener("click",toggleDomainAction,!1),domainEl.addEventListener("touchstart",toggleDomainAction,!!supportsPassive&&{passive:!0});for await(const domainEl of document.querySelectorAll(".domains-list td.delete-domain"))domainEl.addEventListener("click",deleteDomainAction,!1),domainEl.addEventListener("touchstart",deleteDomainAction,!!supportsPassive&&{passive:!0})},domainsAction=async event=>{const domain_id=event.currentTarget.parent("tr").dataset.domainId;location.href=`/domain/${domain_id}`},projectArchiveButton=async event=>{const project_id=event.currentTarget.parent(".project-actions").dataset.projectId,json=await PublicApi.post({target:"/project/archive",body:{project_id:project_id}});toast(json.status,json.message)},toggleDomainAction=async event=>{const domain_id=event.currentTarget.parent("tr").dataset.domainId,toggleTd=document.querySelector(`tr[data-domain-id="${domain_id}"] td.toggle-monitoring`),is_monitoring="on"===toggleTd.getAttribute("data-monitoring"),target=is_monitoring?"/domain/disable":"/domain/enable",json=await PublicApi.post({target:target,body:{domain_id:domain_id}});if(toast(json.status,json.message),"success"!==json?.status)return;const iconEl=toggleTd.querySelector("img.icon");is_monitoring?(iconEl.setAttribute("src",`${app.staticScheme}${app.staticDomain}/images/icon-toggle-off.svg`),iconEl.title="Enable domain monitoring",toggleTd.setAttribute("data-monitoring","off")):(iconEl.setAttribute("src",`${app.staticScheme}${app.staticDomain}/images/icon-toggle-on.svg`),iconEl.title="Disable domain monitoring",toggleTd.setAttribute("data-monitoring","on"))},deleteDomainAction=async event=>{const toggleTd=event.currentTarget,domain_id=toggleTd.parent("tr").dataset.domainId,json=await PublicApi.post({target:"/domain/delete",body:{domain_id:domain_id}});toast(json.status,json.message),"success"===json?.status&&toggleTd.parent("tr").remove()},handleSocket=async data=>{if("crawler"===data.service_category&&"completed"===data.state){document.querySelector(`tr.disabled-events[data-domain-id="${data.id}"`)&&location.reload()}},renderFindingsChart=async event=>{const findings_info=document.getElementById("findings-info").value,findings_low=document.getElementById("findings-low").value,findings_medium=document.getElementById("findings-medium").value,findings_high=document.getElementById("findings-high").value,canvasEl=document.getElementById("findings-chart");if(findings_high&&findings_medium&&findings_low&&findings_info&&canvasEl){if(canvasEl){const findings_data=[findings_info,findings_low,findings_medium,findings_high];app.charts.projectFindings=new Chart(canvasEl.getContext("2d"),{type:"pie",data:{labels:["Info","Low","Medium","High"],datasets:[{borderWidth:0,backgroundColor:["rgb(40, 112, 204)","rgb(26, 140, 39)","rgb(255, 164, 56)","rgb(255, 56, 56)"],hoverBackgroundColor:["rgba(40, 112, 204, 0.8)","rgba(26, 140, 39, 0.8)","rgba(255, 164, 56, 0.8)","rgba(255, 56, 56, 0.8)"],data:findings_data}]},options:{plugins:{legend:{display:!1}}}})}}else toast("warning",app.ERRORS.corrupt,"Application Error",!0)},renderJobsChart=async event=>{const completed=document.getElementById("jobs-completed").value,pending=document.getElementById("jobs-pending").value,total=document.getElementById("jobs-total").value,canvasEl=document.getElementById("jobs-chart");if(completed&&pending&&total&&canvasEl){if(canvasEl){const jobs_data=[completed,pending,total];app.charts.projectJobs=new Chart(canvasEl.getContext("2d"),{type:"doughnut",data:{labels:["Complete","Pending"],datasets:[{borderWidth:0,backgroundColor:["rgb(26 187 156)","rgb(79 111 141)","transparent"],hoverOffset:4,rotation:-90,data:jobs_data}]},options:{plugins:{legend:{display:!1}}}})}}else toast("warning",app.ERRORS.corrupt,"Application Error",!0)};document.addEventListener("DOMContentLoaded",initProject,!1);