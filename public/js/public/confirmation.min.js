const confirmation_hash=document.getElementById("confirmation_hash").value,decoder=new TextDecoder,enc=new TextEncoder,chooseMfa=async event=>{if("choose-mfa"!=event.currentTarget.id)return;const mfaTypeArr=Array.from(document.getElementsByName("mfaType")).filter((e=>e.checked)),mfaType=1==mfaTypeArr.length?mfaTypeArr.pop().value:null;if("webauthn"==mfaType)return event.currentTarget.textContent="Retry",document.querySelector(".choose-mfa h2").classList.add("invisible"),document.querySelector(".ChooseMfa__label.totp").classList.add("invisible"),createWebauthn();"totp"==mfaType&&(event.currentTarget.remove(),document.querySelector(".choose-mfa h2").classList.add("invisible"),document.querySelector(".ChooseMfa__label.webauthn").classList.add("invisible"),alert("not implemented"))},createWebauthn=async()=>{let credential=await navigator.credentials.create({publicKey:{challenge:enc.encode(app.apiKeyId),rp:{name:app.domainName},user:{id:enc.encode(app.accountEmail),name:app.accountEmail,displayName:app.accountEmail},pubKeyCredParams:[{alg:-7,type:"public-key"},{alg:-257,type:"public-key"}],authenticatorSelection:{authenticatorAttachment:"cross-platform",requireResidentKey:!1,userVerification:"discouraged"},timeout:9e4,attestation:"direct"}}).catch(console.error);const decodedClientData=decoder.decode(credential.response.clientDataJSON),webauthn_challenge=JSON.parse(decodedClientData).challenge,webauthn_id=arrayBufferToBase64(credential.rawId),clientDataJSON=arrayBufferToBase64(credential.response.clientDataJSON),attestationObject=arrayBufferToBase64(credential.response.attestationObject),dataView=new DataView(new ArrayBuffer(2)),decodedAttestationObj=CBOR.decode(credential.response.attestationObject);decodedAttestationObj.authData.slice(53,55).forEach(((value,index)=>dataView.setUint8(index,value)));const credentialIdLength=dataView.getUint16(),webauthn_public_key=arrayBufferToBase64(decodedAttestationObj.authData.slice(55+credentialIdLength)),json=await PublicApi.post({target:"/registration/webauthn",body:{recaptcha_token:recaptcha_token,confirmation_hash:confirmation_hash,webauthn_id:webauthn_id,webauthn_public_key:webauthn_public_key,webauthn_challenge:webauthn_challenge,clientDataJSON:clientDataJSON,attestationObject:attestationObject},hawk:!1});if(json.status&&"success"==json.status)return init_recaptcha("authorization_action"),document.querySelector(".LoginCard__card.choose-mfa").hide(),document.querySelector(".LoginCard__card.confirm-webauthn").show(),localStorage.setItem("_WebAuthn_credentialId",webauthn_id),verifyWebauthn()},verifyWebauthn=async()=>{let credentialId=localStorage.getItem("_WebAuthn_credentialId");if(!credentialId)return void alert("No device registered");const assertion=await navigator.credentials.get({publicKey:{challenge:enc.encode(app.apiKeyId),rpId:app.domainName,userVerification:"discouraged",allowCredentials:[{id:base64ToArrayBuffer(credentialId),type:"public-key",transports:["usb","ble","nfc","internal"]}],timeout:9e4}}).catch(console.error);if(assertion){const response=assertion.response,authData=new Uint8Array(response.authenticatorData),clientDataJSON=new Uint8Array(response.clientDataJSON),rawId=new Uint8Array(assertion.rawId),sig=new Uint8Array(response.signature),assertionClientExtensions=assertion.getClientExtensionResults(),assertion_response={id:assertion.id,rawId:arrayBufferToBase64(rawId),type:assertion.type,authData:arrayBufferToBase64(authData),clientData:arrayBufferToBase64(clientDataJSON),signature:hexEncode(sig),assertionClientExtensions:JSON.stringify(assertionClientExtensions)},json=await PublicApi.post({target:"/authorization/webauthn",body:{recaptcha_token:recaptcha_token,confirmation_hash:confirmation_hash,assertion_response:assertion_response},hawk:!1});if(json.status&&"success"==json.status){const successEl=document.querySelector(".success-checkmark_off");successEl.classList.remove("success-checkmark_off"),successEl.classList.remove("hide"),successEl.classList.add("success-checkmark"),document.getElementById("retry-webauthn").remove(),document.querySelector(".Card__card.confirm-webauthn h1").textContent=json.message,document.querySelector(".Card__card.confirm-webauthn h2").textContent=json.description,document.querySelector(".Card__card.confirm-webauthn img").remove();const scratchEl=document.querySelector(".Card__card.confirm-webauthn .ChooseMfa__parra");scratchEl.classList.add("scratch-code"),scratchEl.textContent=json.scratch_code}}};grecaptcha.ready((()=>{init_recaptcha("confirmation_action")})),document.addEventListener("DOMContentLoaded",(()=>{"/confirmation"!=location.pathname&&history.pushState({},document.title,"/confirmation"),"credentials"in navigator||(document.querySelector(".ChooseMfa__label.webauthn").title="Hardware Security Keys are not supported on this browser",document.querySelector(".ChooseMfa__label.webauthn").classList.add("disabled"),document.querySelector(".ChooseMfa__label.webauthn input").disabled=!0);const chooseMfaEl=document.getElementById("choose-mfa");chooseMfaEl.addEventListener("click",chooseMfa,!1),chooseMfaEl.addEventListener("touchstart",chooseMfa,!!supportsPassive&&{passive:!0});const retryWebauthnEl=document.getElementById("retry-webauthn");retryWebauthnEl.addEventListener("click",verifyWebauthn,!1),retryWebauthnEl.addEventListener("touchstart",verifyWebauthn,!!supportsPassive&&{passive:!0})}),!1);