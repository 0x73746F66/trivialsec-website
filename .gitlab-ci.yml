variables:
  AWS_REGION: ap-southeast-2
  CF_DISTRIBUTION_ID: E33EE7R8AKZ48U

stages:
  - test
  - apply
  - deploy

before_script:
  - touch .env
  - make --version
  - aws --version
  - terraform --version
  - echo nodejs $(node --version)
  - echo npm $(npm --version)
  - echo semgrep $(semgrep --version)

test:sast:
  tags:
    - linode
  stage: test
  script:
    - make semgrep-sast-ci
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: sast-results
    paths:
      - semgrep-ci.json

test:xss:
  tags:
    - linode
  stage: test
  script:
    - make semgrep-xss-ci
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: xss-results
    paths:
      - semgrep-xss.json

test:secrets:
  tags:
    - linode
  stage: test
  script:
    - make semgrep-secrets-ci
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: secrets-results
    paths:
      - semgrep-secrets.json

test:tf:
  tags:
    - linode
  stage: test
  script:
    - make semgrep-tf-ci
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: tf-results
    paths:
      - semgrep-tf.json

test:tls:
  tags:
    - linode
  stage: test
  script:
    - make semgrep-tls-ci
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: tls-results
    paths:
      - semgrep-tls.json

aws:s3:
  retry: 2
  tags:
    - linode
  stage: deploy
  script:
    - make publish-s3
  only:
    refs:
      - main
  needs:
    - tf:apply

aws:cloudfront:
  retry: 2
  tags:
    - linode
  stage: deploy
  script:
    - make invalidate-cloudfront
  only:
    refs:
      - main
  needs:
    - tf:apply

tf:plan:
  retry: 2
  tags:
    - linode
  stage: test
  script:
    - make plan
  only:
    refs:
      - merge_request
      - main
  artifacts:
    name: tfplan
    paths:
      - plans/.tfplan
    reports:
      terraform: plans/tfplan.json

tf:apply:
  retry: 2
  tags:
    - linode
  stage: apply
  script:
    - make apply
  only:
    refs:
      - main
  environment:
    name: aws
    url: https://sso.jumpcloud.com/saml2/aws1
    on_stop: tf:destroy
  dependencies:
    - tf:plan
  when: manual

tf:destroy:
  retry: 2
  stage: apply
  variables:
    GIT_STRATEGY: none
  tags:
    - linode
  script:
    - make destroy
  when: manual
  environment:
    name: aws
    action: stop
  artifacts:
    name: tfdestroy
    paths:
      - plans/.tfdestroy
    reports:
      terraform: plans/tfdestroy.json
